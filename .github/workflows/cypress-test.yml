# Nombre del workflow que aparecerá en la pestaña "Actions" de GitHub
name: Cypress E2E Tests

# Define cuándo se ejecutará el workflow
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ dev ]

# Define los trabajos (jobs) que se ejecutarán
jobs:
  cypress-run:
    # El tipo de máquina virtual donde se ejecutará el job
    runs-on: ubuntu-latest

    # Los pasos que componen el job
    steps:
      # 1. Descarga el código de tu repositorio
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'

      # 3. Instala dependencias de Composer PRIMERO
      - name: Install Composer dependencies
        run: composer install --no-interaction --no-progress

      # 4. Prepara el entorno de Firefly III usando su propio comando
      - name: Prepare Firefly III Environment
        run: php artisan firefly-iii:install --no-interaction

      # 5. Configura Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 6. Cachea las dependencias para acelerar ejecuciones futuras
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      # 7. Instala dependencias de Node
      - name: Install Node dependencies
        run: npm ci

      # 8. Inicia el servidor y ejecuta las pruebas de Cypress
      - name: Run Cypress tests
        run: npm run test:e2e

      # 9. Guarda las capturas de pantalla y videos (siempre)
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            cypress/screenshots
            cypress/videos