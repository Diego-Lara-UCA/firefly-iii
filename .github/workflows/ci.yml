name: CI with Gitflow

on:
  push:
    branches:
      - main
      - dev
      - 'feature/**'
      - 'release/**'
      - 'hotfix/**'
      - 'fix/**'
  pull_request:
    branches:
      - dev
      - main

jobs:
  test-feature-fix:
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/fix/'))
    name: Test on Feature or Fix
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          
          extensions: mbstring, xml, dom, pdo, pgsql, zip
          tools: composer
          coverage: none

      - name: Validate composer.json and composer.lock files
        run: composer validate --strict

      - name: Get Composer cache directory
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest --no-scripts

      - name: Run Unit Tests with PHPUnit (Backend)
        run: ./vendor/bin/phpunit

  build-and-test-dev:
    if: (github.event_name == 'push' && github.ref == 'refs/heads/dev') || (github.event_name == 'pull_request' && github.base_ref == 'refs/heads/dev')
    name: Build and Test on Dev / PR to Dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          
          extensions: mbstring, xml, dom, pdo, pgsql, zip
          tools: composer
          coverage: none

      - name: Validate composer.json and composer.lock files
        run: composer validate --strict

      - name: Get Composer cache directory
        id: composer-cache-dev
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer dependencies
        if: steps.composer-cache-dev.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest --no-scripts

      - name: Run Unit Tests with PHPUnit (Backend)
        run: ./vendor/bin/phpunit

  build-release-hotfix-and-pr-to-main:
    if: (github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/'))) || (github.event_name == 'pull_request' && github.base_ref == 'refs/heads/main')
    name: Build and Test Release/Hotfix / PR to Main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          
          extensions: mbstring, xml, dom, pdo, pgsql, zip
          tools: composer

      - name: Validate composer.json and composer.lock files
        run: composer validate --strict

      - name: Get Composer cache directory
        id: composer-cache-release
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Composer dependencies
        if: steps.composer-cache-release.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest --optimize-autoloader --no-scripts

      - name: Run Unit Tests with PHPUnit (Backend)
        run: ./vendor/bin/phpunit